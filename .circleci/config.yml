version: 2.1

workflows:
  main:
    when:
      and:
        - equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - compile-go-lambda:
          name: Compile Golang for AWS Lambda deployment
      - terraform-plan:
          name: Format and Plan with Terraform
          requires:
            - Compile Golang for AWS Lambda deployment
      - hold:
          name: Verify the Terraform plan
          type: approval
          requires:
            - Format and Plan with Terraform
      - terraform-apply:
          name: Apply the Terraform plan to AWS
          requires:
            - Verify the Terraform plan
executors:
  golang-executor:
    docker:
      - image: cimg/go:1.24.1
  deploy-executor:
    docker:
      - image: cimg/deploy:2025.01
jobs:
  compile-go-lambda:
    executor: golang-executor
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Verify golang
          command: go version
      - run:
          name: Verify python
          command: python --version
      - run:
          name: Compile Golang
          command: python compile_lambda.py
      - persist_to_workspace:
          root: .
          paths:
  terraform-plan:
    executor: deploy-executor
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          name: Attach CircleCI workspace
          at: .
      - run:
          name: Set up AWS Secrets
          command: |
            cat \<<EOF > app/vars/secret.tfvars.tf
                aws_access_key = "$AWS_ACCESS_KEY"
                aws_secret_key = "$AWS_SECRET_KEY"
            EOF
      - run:
          name: Verify Terraform
          command: terraform version
      - run:
          name: Verify Python
          command: python --version
      - run:
          name: Terraform Init
          command: python terraform_init.py
      - run:
          name: Terraform Format Check
          command: python terraform_format.py
      - run:
          name: Terraform Plan
          command: python terraform_plan.py
      - persist_to_workspace:
          root: .
          paths:
  terraform-apply:
    executor: deploy-executor
    parallelism: 1
    steps:
      - checkout
      - attach_workspace:
          name: Attach CircleCI workspace
          at: .
      - run:
          name: Set up AWS Secrets
          command: |
            cat \<<EOF > app/vars/secret.tfvars.tf
                aws_access_key = "$AWS_ACCESS_KEY"
                aws_secret_key = "$AWS_SECRET_KEY"
            EOF
      - run:
          name: Verify Terraform
          command: terraform version
      - run:
          name: Verify Python
          command: python --version
      - run:
          name: Terraform Apply
          command: python terraform_apply.py
